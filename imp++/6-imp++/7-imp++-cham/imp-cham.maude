in ../../../builtins.maude
in ../imp-syntax.maude
in ../../state.maude
in ../buffer.maude

in cham
in imp-heating-cooling-cham

search {| X = 3 / (X + 2) ; |} =>! Sol:Solution .
search {| X = (Y:Id + Z:Id) / (X + 2) ; |} =>! Sol:Solution .

in imp-semantics-cham

in ../imp-programs.maude

mod TEST is including IMP-SEMANTICS-CHAM + IMP-PROGRAMS .  endm

rewrite {| {| sumPgm |} # {| .State |} |} .
rewrite {| {| collatzStmt |} # {| n |-> 10 & q |-> 0 & r |-> 0 & s |-> 0 |} |} .
rewrite {| {| collatzPgm |} #  {| .State |} |} .
rewrite {| {| multiplicationStmt |} # {| x |-> 25 & y |-> 5 & q |-> 0 & r |-> 0 & z |-> 0 |} |} .
rewrite {| {| primalityStmt |} # {| n |-> 1021 & i |-> 0 & q |-> 0 & r |-> 0 & t |-> 0 & x |-> 0 & y |-> 0 & z |-> 0 |} |} .
rewrite {| {| countPrimesPgm |} # {| .State |} |} .

rewrite {| divByZeroStmt |} # {| a |-> 1 & c |-> 0 |} # {| input # epsilon |} # {| output # epsilon |} .
rewrite {| divByZeroInAddStmt |} # {| c |-> 0 |} # {| input # epsilon |} # {| output # epsilon |} . 
rewrite {| divByZeroPgm |} # {| .State |} .  
rewrite {| divByZeroInLLEStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} .
rewrite {| divByZeroInRLEStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 
rewrite {| divByZeroInAndLeftStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} .
rewrite {| divByZeroInAndRightStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 
rewrite {| divByZeroInNegationStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 
rewrite {| divByZeroInWhileConditionStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} .
rewrite {| divByZeroinWhileBodyStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 
rewrite {| divByZeroInIfThenBranch |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} .  
rewrite {| divByZeroInIfElseBranch |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 

rewrite {| IncInIfConditionStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} .
rewrite {| IncInIfThenStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 
rewrite {| IncInIfElseStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 
rewrite {| IncInWhileCondStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 
rewrite {| IncInWhileBranchStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 
rewrite {| IncInAddStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 
rewrite {| IncInDivStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 

rewrite {| haltInIfThenStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} .
rewrite {| haltInIfElseStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 
rewrite {| haltInWhileStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} .  
rewrite {| haltStmt |} # {| a |-> 1 |} # {| input # epsilon |} # {| output # epsilon |} . 

rewrite {| readInAddStmt |} # {| a |-> 1 |} # {| input # 5 : epsilon |} # {| epsilon |} .
rewrite {| readInDivStmt |} # {| a |-> 1 |} # {| input # 5 : epsilon |} # {| epsilon |} . 

search  {| sumPgm |} =>! Sol:Solution .

rewrite {| sum++Pgm |} .
search  {| sum++Pgm |} =>! Sol:Solution .

rewrite {| nondet++Pgm |} .
search  {| nondet++Pgm |} =>! Sol:Solution .

quit
